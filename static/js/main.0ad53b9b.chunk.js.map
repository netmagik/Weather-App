{"version":3,"sources":["helpers.js","Weather.js","Search.js","App.js","index.js"],"names":["dateBuilder","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","Weather","props","weather","main","className","name","sys","country","Date","Math","round","temp","temp_max","temp_min","Search","type","placeholder","onChange","e","handleSearch","target","value","query","onKeyPress","search","api","App","useState","setQuery","setWeather","key","fetch","then","res","json","result","console","log","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0KAAO,SAASA,EAAaC,GACzB,IAGIC,EAFO,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAE/DD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EALS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAKzGL,EAAEM,YACjBC,EAAOP,EAAEQ,cAEb,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,G,WCyBvBE,EA/BC,SAACC,GAAD,MACkB,oBAAtBA,EAAMC,QAAQC,KAClB,gCACA,qBAAKC,UAAU,eAAf,SACE,sBAAKA,UAAU,WAAf,UACGH,EAAMC,QAAQG,KADjB,KACyBJ,EAAMC,QAAQI,IAAIC,QACzC,qBAAKH,UAAU,OAAf,SACEd,EAAY,IAAIkB,aAItB,sBAAKJ,UAAU,cAAf,UACE,sBAAKA,UAAU,OAAf,UACGK,KAAKC,MAAkC,EAA3BT,EAAMC,QAAQC,KAAKQ,KAAY,EAAI,IADlD,WAGA,sBAAKP,UAAU,UAAf,UACE,sBAAKA,UAAU,OAAf,gBACMK,KAAKC,MAAsC,EAA/BT,EAAMC,QAAQC,KAAKS,SAAgB,EAAI,IADzD,WAGA,sBAAKR,UAAU,MAAf,gBACMK,KAAKC,MAAsC,EAA/BT,EAAMC,QAAQC,KAAKU,SAAgB,EAAI,IADzD,cAIF,qBAAKT,UAAU,UAAf,SACGH,EAAMC,QAAQA,QAAQ,GAAGC,aAIzB,ICTEW,EApBA,SAACb,GAKZ,OACA,mCACA,qBAAKG,UAAU,aAAf,SACA,uBAAOW,KAAK,OACVX,UAAU,aACVY,YAAY,YACZC,SATmB,SAACC,GAClBjB,EAAMkB,aAAaD,EAAEE,OAAOC,QAS9BA,MAAOpB,EAAMqB,MACbC,WAAYtB,EAAMuB,cCXlBC,EACC,mCADDA,EAEE,2CA2COC,MAxCf,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOL,EAAP,KAAcM,EAAd,KACA,EAA8BD,mBAAS,IAAvC,mBAAOzB,EAAP,KAAgB2B,EAAhB,KAkBA,OACE,qBAAKzB,UACqB,oBAAhBF,EAAQC,MAEZD,EAAQC,KAAKQ,KAAO,GAAM,WAC1B,MAJN,SAOE,iCACE,cAAC,EAAD,CACEa,OA1BO,SAAAN,GACC,UAAVA,EAAEY,KACJC,MAAM,GAAD,OAAIN,EAAJ,qBAAyBH,EAAzB,+BAAqDG,IACzDO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJN,EAAWM,GACXP,EAAS,IACTQ,QAAQC,IAAIF,OAoBVhB,aAfa,SAACmB,GAAD,OACnBV,EAASU,IAeHA,KAAMhB,IACR,cAAC,EAAD,CAASpB,QAASA,UCtC1BqC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.0ad53b9b.chunk.js","sourcesContent":["export function dateBuilder (d) {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`\n  }","import React from 'react';\nimport { dateBuilder } from './helpers';\n\nconst Weather = (props) => (\n    (typeof props.weather.main != 'undefined') \n    ? ( <div>\n        <div className=\"location-box\">\n          <div className=\"location\">\n            {props.weather.name}, {props.weather.sys.country}\n            <div className=\"date\">\n             {dateBuilder(new Date())}\n            </div>\n          </div>\n        </div>\n        <div className=\"weather-box\">\n          <div className=\"temp\">\n            {Math.round((props.weather.main.temp) * 9 / 5 + 32)}°F\n          </div>\n          <div className=\"highlow\">\n            <div className=\"high\">\n              H: {Math.round((props.weather.main.temp_max) * 9 / 5 + 32)}°F\n            </div>\n            <div className=\"low\">\n              L: {Math.round((props.weather.main.temp_min) * 9 / 5 + 32)}°F\n            </div>\n          </div>\n          <div className=\"weather\">\n            {props.weather.weather[0].main}\n          </div>\n        </div>\n        </div>\n        ) : ('')\n)\n\nexport default Weather;","import React from 'react';\n\nconst Search = (props) => {\n\n    const handleChange = (e) => {\n        props.handleSearch(e.target.value);\n    }\n    return (\n    <>\n    <div className=\"search-box\">\n    <input type=\"text\" \n      className=\"search-bar\" \n      placeholder=\"Search...\"\n      onChange={handleChange}\n      value={props.query}\n      onKeyPress={props.search} />\n   </div>\n   </>\n   )\n    \n    }\n\nexport default Search;","import React, {useState} from 'react';\nimport Weather from './Weather';\nimport Search from './Search';\n\nconst api = {\n  key: '0f98c8f94399873693a034fcff6a4818',\n  base: 'https://api.openweathermap.org/data/2.5/'\n}\n\nfunction App() {\n\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = e => {\n    if (e.key === 'Enter') {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n      .then(res => res.json())\n      .then(result => {\n        setWeather(result);\n        setQuery('');\n        console.log(result)\n      });\n    }\n  }\n\n  const handleSearch = (data) => (\n    setQuery(data)\n  )\n\n  return (\n    <div className={\n      (typeof weather.main != 'undefined') \n        ? \n        ((weather.main.temp > 16) ? 'app warm' : 'app') \n        : 'app'\n          }\n      >\n      <main>\n        <Search \n          search={search} \n          handleSearch={handleSearch}\n          data={query}/>\n        <Weather weather={weather}/>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}